.edit-result-label-modal.modal-dialog.modal-xs
  .modal-content
    = form_for @test, url: update_result_label_test_path, remote: true do |f|
      .modal-header
        button.close type="button" data-dismiss="modal" aria-label="Close"
          span aria-hidden="true" &times;
        h4.modal-title = t(".title")
        
      .modal-body
        .checkbox
          = f.label :use_default do
            = f.check_box :use_default, class: "user-default-result-label", checked: (@test.result_labels.nil? ? true : false)
            = t(".use_default_label")
        table style=("display: none;" if @test.result_labels.nil?)
          tbody#resultLabelList
            - @test.result_labels_or_default.each do |k, v|
              tr
                td.drag-handle style="width:30px;"
                  = fa_icon "bars", class: "drag-handle-icon"
                td.result-label-text
                  = text_field_tag "test[result_label_texts][]", k, { id: nil, placeholder: t(".label_placeholder"), maxlength: 10, required: true }
                td.result-label-color style="width:40px;"
                  input class="btn select-color color-#{v}" name="test[result_label_colors][]" value="#{v}" type="text" tabindex="0" role="button" data-toggle="popover" data-trigger="focus" data-placement="left"
                td.delete-result-label style="width:40px;"
                  = fa_icon("close", class: "delete-result-label-icon")
          .over
        .table-footer style=("display: none;" if @test.result_labels.nil?)
          = fa_icon("plus", class: "add-result-label-icon")

        .popover-content-template
          .color-picker
            - color_names.each do |color|
              input type="radio" name="color-radio" id="radio-#{color}" value="#{color}"
                label for="radio-#{color}" class="btn color-item color-#{color}"

      .modal-footer
        button.btn.btn-lg.btn-default type="button" data-dismiss="modal" = t("dialog.cancel")
        = f.submit t("helpers.submit.submit"), class: "btn btn-lg color-primary"